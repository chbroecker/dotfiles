# Setting the prefix from C-b to C-a
set -g prefix C-a

# Free the original C-b prefix keybinding
unbind C-b

# setting the delay between prefix and command
set -s escape-time 1

# Set the base index for panes to 1 instead of 0
setw -g base-index 1

# Reload the config
bind r source-file ~/.tmux.conf \; display "~/.tmux.conf sourced!"

# Ensure that we can send Ctrl-A to other apps by pressing C-a twice
bind C-a send-prefix

# splitting panes with | and -
bind | split-window -h
bind - split-window -v

# moving between panes with Prefix h, j, k, l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Quick pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# left_sep_main=''  # /!\ you don't need to install Powerline
# left_sep_sub=''   #   you only need fonts patched with
# right_sep_main='' #   Powerline symbols or the standalone
# right_sep_sub=''  #   PowerlineSymbols.otf font

# mouse support - set to on if you want to use the mouse
set -g mouse off

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# status line
set -g status-style fg=colour172,bold,bg=colour0
# setw -g window-status-current-style "fg=colour0,bg=colour172, $right_sep_main"

# colors for pane borders
setw -g pane-border-style fg=colour147,bg=black
setw -g pane-active-border-style fg=colour147,bg=black

# active panel normal, other shaded out
# setw -g window-style fg=colour172,bg=colour0
# setw -g window-active-style fg=white,bg=black

# Command / message line
set -g message-style fg=colour172,bold,bg=colour0

# enable vi keys
setw -g mode-keys vi

# makes the pipes that seperate panes continous
set -as terminal-overrides ",*:U8=0"

# ------------------- Status Line -------------------


set -g status-left " ❐ #S "
set -g status-right "$right_sep_sub %R $right_sep_sub %d %b $right_sep_main#[fg=colour0, bg=colour172]#H"


# ---------------- Apply Stuff ----------------

# run 'cut -c3- ~/.tmux.conf | sh -s _hostname'

# EOF
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# _username() {
#   tty=${1:-$(tmux display -p '#{pane_tty}')}
#   ssh_only=$2
#   # shellcheck disable=SC2039
#   if [ x"$OSTYPE" = x"cygwin" ]; then
#     pid=$(ps -a | awk -v tty="${tty##/dev/}" '$5 == tty && /ssh/ && !/vagrant ssh/ && !/autossh/ && !/-W/ { print $1 }')
#     [ -n "$pid" ] && ssh_parameters=$(tr '\0' ' ' < "/proc/$pid/cmdline" | sed 's/^ssh //')
#   else
#     ssh_parameters=$(ps -t "$tty" -o command= | awk '/ssh/ && !/vagrant ssh/ && !/autossh/ && !/-W/ { $1=""; print $0; exit }')
#   fi
#   if [ -n "$ssh_parameters" ]; then
#     # shellcheck disable=SC2086
#     username=$(ssh -G $ssh_parameters 2>/dev/null | awk 'NR > 2 { exit } ; /^user / { print $2 }')
#     # shellcheck disable=SC2086
#     [ -z "$username" ] && username=$(ssh -T -o ControlPath=none -o ProxyCommand="sh -c 'echo %%username%% %r >&2'" $ssh_parameters 2>&1 | awk '/^%username% / { print $2; exit }')
#   else
#     if ! _is_enabled "$ssh_only"; then
#       # shellcheck disable=SC2039
#       if [ x"$OSTYPE" = x"cygwin" ]; then
#         username=$(whoami)
#       else
#         username=$(ps -t "$tty" -o user= -o pid= -o ppid= -o command= | awk '
#           !/ssh/ { user[$2] = $1; ppid[$3] = 1 }
#           END {
#             for (i in user)
#               if (!(i in ppid))
#               {
#                 print user[i]
#                 exit
#               }
#           }
#         ')
#       fi
#     fi
#   fi
#
#   echo "$username"
# }
#
# _hostname() {
#   tty=${1:-$(tmux display -p '#{pane_tty}')}
#   ssh_only=$2
#   # shellcheck disable=SC2039
#   if [ x"$OSTYPE" = x"cygwin" ]; then
#     pid=$(ps -a | awk -v tty="${tty##/dev/}" '$5 == tty && /ssh/ && !/vagrant ssh/ && !/autossh/ && !/-W/ { print $1 }')
#     [ -n "$pid" ] && ssh_parameters=$(tr '\0' ' ' < "/proc/$pid/cmdline" | sed 's/^ssh //')
#   else
#     ssh_parameters=$(ps -t "$tty" -o command= | awk '/ssh/ && !/vagrant ssh/ && !/autossh/ && !/-W/ { $1=""; print $0; exit }')
#   fi
#   if [ -n "$ssh_parameters" ]; then
#     # shellcheck disable=SC2086
#     hostname=$(ssh -G $ssh_parameters 2>/dev/null | awk 'NR > 2 { exit } ; /^hostname / { print $2 }')
#     # shellcheck disable=SC2086
#     [ -z "$hostname" ] && hostname=$(ssh -T -o ControlPath=none -o ProxyCommand="sh -c 'echo %%hostname%% %h >&2'" $ssh_parameters 2>&1 | awk '/^%hostname% / { print $2; exit }')
#     #shellcheck disable=SC1004
#     hostname=$(echo "$hostname" | awk '\
#     { \
#       if ($1~/^[0-9.:]+$/) \
#         print $1; \
#       else \
#         split($1, a, ".") ; print a[1] \
#     }')
#   else
#     if ! _is_enabled "$ssh_only"; then
#       hostname=$(command hostname -s)
#     fi
#   fi
#
#   echo "$hostname"
# }

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'odedlaz/tmux-onedark-theme'

run '~/.tmux/plugins/tpm/tpm'
